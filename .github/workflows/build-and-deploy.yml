name: Deploy application
on:
  push:
    branches: [main]
permissions:
  id-token: write
  contents: read
jobs:
  backend-deploy:
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Restore and build app
        run: |
          dotnet restore
          dotnet build

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run EF Core migrations
        run: |
          # Installs the EF Core command line tool
          dotnet tool install --global dotnet-ef
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
          for i in {1..5}; do
            echo "Attempt $i to run EF migrations..."
            # Executes the migration command using a connection string composed of secrets
            dotnet ef database update --startup-project ./apps/swe-demo-api/ --project .\libs\swe-demo-backend\infrastructure\SweDemoBackend.Infrastructure --connection "Server=tcp:${{ secrets.AZURE_SQL_SERVER }}.database.windows.net,1433;Initial Catalog=${{ secrets.AZURE_SQL_DB }};Persist Security Info=False;User ID=${{ secrets.AZURE_SQL_ADMIN }};Password=${{ secrets.AZURE_SQL_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" && break
            echo "Migration failed, retrying in 10 seconds..."
            sleep 10
          done
        shell: bash

      - name: Create publish build
        run: dotnet publish -o publish

      - name: Deploy to Azure Web App
        # Uses the built-in Azure Web Apps deploy action
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }} # Backend Web App Name
          package: ./publish # The output folder from the publish step

  frontend-deploy:
    environment: Production
    runs-on: ubuntu-latest
    needs: backend-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install

      - name: Create .env file
        run: |
          touch ./apps/swe-demo-app/.env
          echo NG_APP_TEST_VALUE="Testvalue from deploy" >> ./apps/swe-demo-app/.env
          echo NG_APP_LEGO_API_URL=${{ secrets.API_URL }} >> ./apps/swe-demo-app/.env
          cat ./apps/swe-demo-app/.env # Print for debugging

      - name: Build app
        run: |
          npx nx run swe-demo-app:build

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_CLIENT_NAME }}
          package: ./dist/apps/swe-demo-app/browser